{
  "openapi": "3.1.0",
  "info": {
    "title": "StackClass API Reference",
    "description": "Backend API and services for StackClass",
    "license": {
      "name": ""
    },
    "version": "1.2.0"
  },
  "paths": {
    "/v1/courses": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Find all released courses (beta and live status)",
        "operationId": "find-released-courses",
        "responses": {
          "200": {
            "description": "Courses retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Course"
        ],
        "summary": "Create a course.",
        "operationId": "create-course",
        "requestBody": {
          "description": "Create course request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCourseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Course created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Failed to create course"
          }
        },
        "security": [
          {
            "AdminBasicAuth": []
          }
        ]
      }
    },
    "/v1/courses/{slug}": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Get a course.",
        "operationId": "get-course-detail",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDetailResponse"
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to get course"
          }
        }
      },
      "delete": {
        "tags": [
          "Course"
        ],
        "summary": "Delete a course.",
        "operationId": "delete-course",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Course deleted successfully"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to delete course"
          }
        },
        "security": [
          {
            "AdminBasicAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Course"
        ],
        "summary": "Update course from git repository",
        "operationId": "update-course",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Course updated successfully"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to update course"
          }
        },
        "security": [
          {
            "AdminBasicAuth": []
          }
        ]
      }
    },
    "/v1/courses/{slug}/attempts": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Find all attempts for a course.",
        "operationId": "find-course-attempts",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of the course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attempts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttemptResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to fetch attempts"
          }
        }
      }
    },
    "/v1/courses/{slug}/extensions": {
      "get": {
        "tags": [
          "Extension"
        ],
        "summary": "Find all extensions for a course.",
        "operationId": "find-all-extensions",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Extensions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExtensionResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to get course"
          }
        }
      }
    },
    "/v1/courses/{slug}/stages": {
      "get": {
        "tags": [
          "Stage"
        ],
        "summary": "Find all stages for a course (including extensions)",
        "operationId": "find-all-stages",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StageResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to get course"
          }
        }
      }
    },
    "/v1/courses/{slug}/stages/base": {
      "get": {
        "tags": [
          "Stage"
        ],
        "summary": "Find only base stages for a course (excluding extensions).",
        "operationId": "find-base-stages",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StageResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to get course"
          }
        }
      }
    },
    "/v1/courses/{slug}/stages/extended": {
      "get": {
        "tags": [
          "Stage"
        ],
        "summary": "Find only extended stages for a course.",
        "operationId": "find-extended-stages",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StageResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to get course"
          }
        }
      }
    },
    "/v1/courses/{slug}/stages/{stage_slug}": {
      "get": {
        "tags": [
          "Stage"
        ],
        "summary": "Get the details of the stage.",
        "operationId": "get-stage-detail",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stage_slug",
            "in": "path",
            "description": "The slug of stage",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stage retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StageDetailResponse"
                }
              }
            }
          },
          "404": {
            "description": "Course or stage not found"
          },
          "500": {
            "description": "Failed to get course or stage"
          }
        }
      }
    },
    "/v1/user/courses": {
      "get": {
        "tags": [
          "User",
          "Course"
        ],
        "summary": "Find all courses for the current user.",
        "operationId": "find-user-courses",
        "responses": {
          "200": {
            "description": "User courses retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserCourseResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "User",
          "Course"
        ],
        "summary": "Enroll the current user in a course.",
        "operationId": "enroll-user-in-course",
        "requestBody": {
          "description": "Enroll user in course request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserCourseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User enrolled in course successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCourseResponse"
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to enroll user in course"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/v1/user/courses/{slug}": {
      "get": {
        "tags": [
          "User",
          "Course"
        ],
        "summary": "Get the course detail for the current user.",
        "operationId": "get-user-course-detail",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCourseResponse"
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to get course"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "User",
          "Course"
        ],
        "summary": "Update this course for the current user.",
        "operationId": "update-user-course",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update this course for the current user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCourseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "User course updated successfully"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to enroll user in course"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/v1/user/courses/{slug}/stages": {
      "get": {
        "tags": [
          "User",
          "Stage"
        ],
        "summary": "Find all stages for the current user.",
        "operationId": "find-user-stages",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserStageResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Failed to get course"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "User",
          "Stage"
        ],
        "summary": "Mark a stage as completed for the current user.",
        "operationId": "complete-stage",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Complete stage request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "slug"
                ],
                "properties": {
                  "slug": {
                    "type": "string",
                    "description": "The slug of the stage to mark as completed"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Stage completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Course or stage not found"
          },
          "500": {
            "description": "Failed to complete stage"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/v1/user/courses/{slug}/stages/{stage_slug}": {
      "get": {
        "tags": [
          "User",
          "Stage"
        ],
        "summary": "Get the details of the stage for the current user.",
        "operationId": "get-user-stage-detail",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stage_slug",
            "in": "path",
            "description": "The slug of stage",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stage retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Course or stage not found"
          },
          "500": {
            "description": "Failed to get course or stage"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/v1/user/courses/{slug}/stages/{stage_slug}/status": {
      "get": {
        "tags": [
          "User",
          "Stage"
        ],
        "summary": "Stream the status of a specific stage for the current user.",
        "operationId": "stream_user_stage_status",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stage_slug",
            "in": "path",
            "description": "The slug of stage",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully started streaming stage status updates"
          },
          "404": {
            "description": "Course or stage not found"
          },
          "500": {
            "description": "Failed to stream stage status"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    },
    "/v1/user/courses/{slug}/status": {
      "get": {
        "tags": [
          "User",
          "Course"
        ],
        "summary": "Stream the status of a specific course for the current user.",
        "operationId": "stream_user_course_status",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "The slug of course",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully started streaming course status updates"
          },
          "404": {
            "description": "Course or stage not found"
          },
          "500": {
            "description": "Failed to stream course status"
          }
        },
        "security": [
          {
            "JWTBearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AttemptResponse": {
        "type": "object",
        "required": [
          "user_id",
          "avatar",
          "username",
          "completed",
          "total"
        ],
        "properties": {
          "avatar": {
            "type": "string",
            "description": "URL of the user's avatar image"
          },
          "completed": {
            "type": "integer",
            "format": "int32",
            "description": "Number of tasks completed by the user"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of tasks available"
          },
          "user_id": {
            "type": "string",
            "description": "The unique identifier of the user"
          },
          "username": {
            "type": "string",
            "description": "The display name of the user"
          }
        }
      },
      "CourseDetailResponse": {
        "type": "object",
        "required": [
          "slug",
          "name",
          "short_name",
          "release_status",
          "description",
          "summary",
          "logo",
          "stage_count",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "description": {
            "type": "string",
            "description": "Detailed description"
          },
          "logo": {
            "type": "string",
            "description": "URL or path to the course logo"
          },
          "name": {
            "type": "string"
          },
          "release_status": {
            "type": "string",
            "description": "Release status (alpha/beta/live)"
          },
          "short_name": {
            "type": "string"
          },
          "slug": {
            "type": "string",
            "description": "Unique human-readable identifier"
          },
          "stage_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of stages in the course"
          },
          "summary": {
            "type": "string",
            "description": "Brief summary"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "CourseResponse": {
        "type": "object",
        "required": [
          "slug",
          "name",
          "short_name",
          "release_status",
          "summary",
          "logo",
          "stage_count",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "logo": {
            "type": "string",
            "description": "URL or path to the course logo"
          },
          "name": {
            "type": "string"
          },
          "release_status": {
            "type": "string",
            "description": "Release status (alpha/beta/live)"
          },
          "short_name": {
            "type": "string"
          },
          "slug": {
            "type": "string",
            "description": "Unique human-readable identifier"
          },
          "stage_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of stages in the course"
          },
          "summary": {
            "type": "string",
            "description": "Brief summary"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "CreateCourseRequest": {
        "type": "object",
        "required": [
          "repository"
        ],
        "properties": {
          "repository": {
            "type": "string",
            "description": "The git repository URL of the course"
          }
        }
      },
      "CreateUserCourseRequest": {
        "type": "object",
        "required": [
          "course_slug",
          "proficiency",
          "cadence",
          "accountability"
        ],
        "properties": {
          "accountability": {
            "type": "boolean",
            "description": "Whether the user wants accountability emails"
          },
          "cadence": {
            "type": "string",
            "description": "Practice cadence of the user"
          },
          "course_slug": {
            "type": "string",
            "description": "The slug of the course to enroll in"
          },
          "proficiency": {
            "type": "string",
            "description": "Language proficiency level of the user"
          }
        }
      },
      "ExtensionResponse": {
        "type": "object",
        "required": [
          "slug",
          "name",
          "description",
          "stage_count",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "description": {
            "type": "string",
            "description": "Extension description"
          },
          "name": {
            "type": "string",
            "description": "Extension name"
          },
          "slug": {
            "type": "string",
            "description": "Unique identifier within course"
          },
          "stage_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of stages in the extension"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "StageDetailResponse": {
        "type": "object",
        "required": [
          "slug",
          "name",
          "difficulty",
          "description",
          "instruction",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "description": {
            "type": "string",
            "description": "A short markdown description of the stage,\nused in the course overview page."
          },
          "difficulty": {
            "type": "string",
            "description": "Difficulty level (very_easy, easy, medium, hard)"
          },
          "extension_slug": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional slug of the parent extension (null if part of main course)"
          },
          "instruction": {
            "type": "string",
            "description": "A markdown description for this stage."
          },
          "name": {
            "type": "string",
            "description": "Display name of the stage"
          },
          "slug": {
            "type": "string",
            "description": "Unique human-readable identifier within parent context"
          },
          "solution": {
            "type": [
              "string",
              "null"
            ],
            "description": "The solution to this stage, if available."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "StageResponse": {
        "type": "object",
        "required": [
          "slug",
          "name",
          "difficulty",
          "description",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "description": {
            "type": "string",
            "description": "A short markdown description of the stage,\nused in the course overview page."
          },
          "difficulty": {
            "type": "string",
            "description": "Difficulty level (very_easy, easy, medium, hard)"
          },
          "extension_slug": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional slug of the parent extension (null if part of main course)"
          },
          "name": {
            "type": "string",
            "description": "Display name of the stage"
          },
          "slug": {
            "type": "string",
            "description": "Unique human-readable identifier within parent context"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "UpdateUserCourseRequest": {
        "type": "object",
        "required": [
          "proficiency",
          "cadence",
          "accountability"
        ],
        "properties": {
          "accountability": {
            "type": "boolean",
            "description": "Whether the user wants accountability emails"
          },
          "cadence": {
            "type": "string",
            "description": "Practice cadence of the user"
          },
          "proficiency": {
            "type": "string",
            "description": "Language proficiency level of the user"
          }
        }
      },
      "UserCourseResponse": {
        "type": "object",
        "required": [
          "course_slug",
          "started_at",
          "completed_stage_count",
          "proficiency",
          "cadence",
          "accountability",
          "activated",
          "repository"
        ],
        "properties": {
          "accountability": {
            "type": "boolean",
            "description": "Whether the user wants accountability emails"
          },
          "activated": {
            "type": "boolean",
            "description": "Whether the first Git push was received"
          },
          "cadence": {
            "type": "string",
            "description": "Practice cadence of the user"
          },
          "completed_stage_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of stages completed by the user"
          },
          "course_slug": {
            "type": "string",
            "description": "Slug of the enrolled course"
          },
          "current_stage_slug": {
            "type": [
              "string",
              "null"
            ],
            "description": "Slug of the current stage the user is on"
          },
          "proficiency": {
            "type": "string",
            "description": "Language proficiency level of the user"
          },
          "repository": {
            "type": "string",
            "description": "The git repository URL of the user course"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the enrollment started"
          }
        }
      },
      "UserStageResponse": {
        "type": "object",
        "required": [
          "course_slug",
          "stage_slug",
          "status",
          "test",
          "started_at"
        ],
        "properties": {
          "completed_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "Timestamp when the stage was completed"
          },
          "course_slug": {
            "type": "string",
            "description": "Slug of the enrolled course"
          },
          "stage_slug": {
            "type": "string",
            "description": "Slug of the stage"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the stage was started"
          },
          "status": {
            "type": "string",
            "description": "Current progress status (in_progress, completed)"
          },
          "test": {
            "type": "string",
            "description": "Test result status (passed, failed)"
          }
        }
      },
      "UserStageStatusResponse": {
        "type": "object",
        "required": [
          "status",
          "test"
        ],
        "properties": {
          "status": {
            "type": "string",
            "description": "Current progress status (in_progress, completed)"
          },
          "test": {
            "type": "string",
            "description": "Test result status (passed, failed)"
          }
        }
      }
    },
    "securitySchemes": {
      "AdminBasicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "JWTBearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Course",
      "description": "The Course Service Handlers"
    },
    {
      "name": "Extension",
      "description": "The Extension Service Handlers"
    },
    {
      "name": "Stage",
      "description": "The Stage Service Handlers"
    },
    {
      "name": "User",
      "description": "The User Service Handlers"
    }
  ]
}
